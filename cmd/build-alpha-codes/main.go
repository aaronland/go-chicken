package main

// https://github.com/Ranks/emoji-alpha-codes

import (
	"bytes"
	"encoding/csv"
	"fmt"
	"io"
	"io/ioutil"
	"log"
	"net/http"
	"strings"
	"time"
)

func main() {

	alphacode_data := "https://raw.githubusercontent.com/emojione/emojione/master/extras/alpha-codes/eac.csv"

	rsp, err := http.Get(alphacode_data)
	defer rsp.Body.Close()

	if err != nil {
		log.Fatal(err)
	}

	body, err := ioutil.ReadAll(rsp.Body)

	if err != nil {
		log.Fatal(err)
	}

	ts := time.Now()

	fmt.Printf("%s\n\n", "package chicken")

	fmt.Printf("/* %s */\n", alphacode_data)
	fmt.Printf("/* This file was generated by robots at %s */\n\n", ts.UTC())

	fmt.Printf("%s\n", "var EmojiAlphaCodes = map[string]string{")

	reader := csv.NewReader(bytes.NewReader(body))
	reader.Read() // skip the first line

	for {
		row, err := reader.Read()

		if err == io.EOF {
			break
		}

		if err != nil {
			log.Fatal(err)
		}

		codepoint := row[0]
		alphacode := row[2]
		aliases := row[3]

		fmt.Printf("\t\t\"%s\":\t\"0x%s\",\n", alphacode, codepoint)

		if aliases != "" {

			for _, alias := range strings.Split(aliases, "|") {
				fmt.Printf("\t\t\"%s\":\t\"0x%s\",\n", alias, codepoint)
			}
		}
	}

	fmt.Printf("%s\n", "}")

}
